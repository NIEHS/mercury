---
title: "Map air temperature products"
format: html
editor: visual
---

## Case study in Raleigh

Choose a city

```{r}
city <- "san_francisco"
```

Open area shapefile

```{r}
hw_dict <- read.csv("../input/heatwatch_paths_dictionary.csv")
hw_date <- hw_dict[hw_dict$city == city, "date"] |>
  as.Date(tryFormats = "%m/%d/%y")
year <- lubridate::year(hw_date)
cities_shp <- "../input/cb_2018_us_ua10_500k/cb_2018_us_ua10_500k.shp"
city_shp <- load_city_borders(city, cities_shp)
```


## Daymet

**Download data** Note: location parameter has a unusual format. It is a bounding box c(lat, lon, lat, lon) defined by a top left and bottom-right coordinates.

```{r}
dm_path <- paste0("../input/daymet/", city)
if (!dir.exists(dm_path)) {
  dir.create(dm_path)
}
extract_loc <- function(shp) {
  ext <- terra::ext(shp)
  return(c(ext[4], ext[1], ext[3], ext[2]))
}
if (!file.exists(paste0(dm_path, "/tmin_daily_", year, "_ncss.nc")) |
  !file.exists(paste0(dm_path, "/tmax_daily_", year, "_ncss.nc"))) {
  daymetr::download_daymet_ncss(
    location = extract_loc(city_shp),
    start = year,
    end = year,
    frequency = "daily",
    param = c("tmin", "tmax"),
    path = dm_path,
    silent = TRUE
  )
}
```

**Subset daymet on the shapefile area on heatwatch campaign day**

```{r}
daymet <- terra::rast(paste0(dm_path, "/tmin_daily_", year, "_ncss.nc"))
daymet <- daymet[[lubridate::yday(hw_date)]] |>
  convert_temp(from = "C", to = "F") |>
  crop_product(area_shp = city_shp)
```

## Measurement campaign


```{r}
setwd("..")
hw_path <- hw_dict[hw_dict$city == city, "path"]
hw_path 
heatwatch <- load_heatwatch_city(city,
                                 "am",
                                 "./input/heatwatch_paths_dictionary.csv") |>
  crop_product(area_shp = city_shp)
```

## gridMET

**Download gridMET if not already done (contiguous US files)**

```{r, eval = FALSE}
gm_path <- paste0("../input/gridmet/")
if (!file.exists(paste0(gm_path, "/tmmn_", year, ".nc"))) {
  download_gridmet(year, "tmmn", gm_path)
}
```

**Open file and select area and day**

```{r}
gridmet <- terra::rast(paste0(gm_path, "/tmmn_2021.nc")) 
gridmet <- gridmet[[lubridate::yday(hw_date)]] |>
  crop_product(area_shp = city_shp)
gridmet <- convert_temp(gridmet, from = "K", to = "F")
```

# Maps

## In degrees Fahrenheit

```{r}
proj_daymet <- terra::project(daymet, terra::crs(heatwatch))
proj_gridmet <- terra::project(gridmet, terra::crs(heatwatch))
plot_daymet <- map_temp_daymet(proj_daymet, city_shp, "F")
plot_heatwatch <- map_temp_heatwatch(heatwatch, city_shp, "F")
plot_gridmet <- map_temp_gridmet(proj_gridmet, city_shp, "F")
plot_gridmet
plot_daymet
plot_heatwatch
```

Merge all maps 

```{r}
ggpubr::ggarrange(plot_gridmet,
                  plot_daymet,
                  plot_heatwatch,
                  ncol = 3,
                  legend = "right",
                  common.legend = FALSE)
```

## In degrees Celcius

```{r}
plot_daymet <- ggplot() +
    tidyterra::geom_spatraster(data = far_to_cel(terra::project(ral_daymet, terra::crs(heatwatch)))) +
    geom_sf(
      data = sf::st_as_sf(terra::project(ral_borders,
                                         terra::crs(heatwatch))),
                      aes(geometry = geometry),
      colour = "black", linewidth = .3, fill = NA
    ) +
    tidyterra::scale_fill_whitebox_c(
      palette = "muted",
      labels = scales::label_number(suffix = "ºC"),
      n.breaks = 12,
      limits = c(18.6, 21.9),
      guide = guide_legend(reverse = TRUE)
    ) +
    labs(
      fill = "",
      title = "Daymet product",
      caption = expression(italic('Data source: daymet.ornl.gov'))
    ) +
  ylim(3954410, 3983480)+
  xlim(692960.2, 732000)+
    ggspatial::annotation_scale(
      location = "bl", pad_x = unit(1, "cm"),
      pad_y = unit(.5, "cm"),
      height = unit(0.150, "cm"),
      text_cex = 1
    ) +
    ggspatial::annotation_north_arrow(
      location = "br",
      which_north = "true",
      height = unit(1, "cm"),
      width = unit(1, "cm"),
      pad_x = unit(0.1, "cm"),
      pad_y = unit(0.1, "cm")
    ) +
    theme(
      axis.text = element_text(size = 8),
      axis.text.y = element_text(angle = 90),
      plot.caption = element_text(size = 12),
      legend.text = element_text(size = 12),
      legend.title = element_text(size = 12),
      plot.title = element_text(size = 15, hjust = 0.5),
      panel.background = element_rect(fill = "white"),
      panel.grid.major = element_line(colour = "grey")
    )

plot_campaign <- ggplot() +
    tidyterra::geom_spatraster(data = far_to_cel(heatwatch)) +
    geom_sf(
      data = sf::st_as_sf(terra::project(ral_borders,
                                         terra::crs(heatwatch))),
                      aes(geometry = geometry),
      colour = "black", linewidth = .3, fill = NA
    ) +
    tidyterra::scale_fill_whitebox_c(
      palette = "muted",
      labels = scales::label_number(suffix = "ºC"),
      n.breaks = 12,
      limits = c(18.6, 21.9),
      guide = guide_legend(reverse = TRUE)
    ) +
    labs(
      fill = "",
      title = "Mobile measurement campaign",
      caption = expression(italic(
        'Data source: climate.ncsu.edu/research/uhi/'))
    ) +
    ggspatial::annotation_scale(
      location = "bl", pad_x = unit(1, "cm"),
      pad_y = unit(.5, "cm"),
      height = unit(0.150, "cm"),
      text_cex = 1
    ) +
    ggspatial::annotation_north_arrow(
      location = "br",
      which_north = "true",
      height = unit(1, "cm"),
      width = unit(1, "cm"),
      pad_x = unit(0.1, "cm"),
      pad_y = unit(0.1, "cm")
    ) +
  ylim(3954410, 3983480)+
  xlim(692960.2, 732000)+
    theme(
      axis.text = element_text(size = 8),
      axis.text.y = element_text(angle = 90),
      plot.caption = element_text(size = 12),
      legend.text = element_text(size = 12),
      legend.title = element_text(size = 12),
      plot.title = element_text(size = 15, hjust = 0.5),
      panel.background = element_rect(fill = "white"),
      panel.grid.major = element_line(colour = "grey")
    )

plot_gridmet <- ggplot() +
    tidyterra::geom_spatraster(data = terra::project(ral_gridmet, terra::crs(heatwatch)) - 273.15) +
    geom_sf(
      data = sf::st_as_sf(terra::project(ral_borders,
                                         terra::crs(heatwatch))),
                      aes(geometry = geometry),
      colour = "black", linewidth = .3, fill = NA
    ) +
    tidyterra::scale_fill_whitebox_c(
      palette = "muted",
      labels = scales::label_number(suffix = "ºC"),
      n.breaks = 12,
      limits = c(18.6, 21.9),
      guide = guide_legend(reverse = TRUE)
    ) +
    labs(
      fill = "",
      title = "gridMET product",
      caption = expression(italic('Data source: climatologylab.org'))
    ) +
  ylim(3954410, 3983480)+
  xlim(692960.2, 732000)+
    ggspatial::annotation_scale(
      location = "bl", pad_x = unit(1, "cm"),
      pad_y = unit(.5, "cm"),
      height = unit(0.150, "cm"),
      text_cex = 1
    ) +
    ggspatial::annotation_north_arrow(
      location = "br",
      which_north = "true",
      height = unit(1, "cm"),
      width = unit(1, "cm"),
      pad_x = unit(0.1, "cm"),
      pad_y = unit(0.1, "cm")
    ) +
    theme(
      axis.text = element_text(size = 8),
      axis.text.y = element_text(angle = 90),
      plot.caption = element_text(size = 12),
      legend.text = element_text(size = 12),
      legend.title = element_text(size = 12),
      plot.title = element_text(size = 15, hjust = 0.5),
      panel.background = element_rect(fill = "white"),
      panel.grid.major = element_line(colour = "grey")
    )
```
Arrange the maps and save the figure

```{r}
maps <- ggpubr::ggarrange(plot_gridmet,
                          plot_daymet,
                          plot_campaign,
                          ncol = 3,
                          legend = "right",
                          common.legend = TRUE)
maps
ggsave(plot = maps,
       filename = "~/Pictures/air_temperature_products_raleigh_20210723.png",
       width = 12,
       height = 4,
       dpi = 200)
```

